/* tslint:disable */
/* eslint-disable */
/**
 * Great Man API
 * great man api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: admin@astrack.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TalkAttachmentsInner } from './TalkAttachmentsInner';
import {
    TalkAttachmentsInnerFromJSON,
    TalkAttachmentsInnerFromJSONTyped,
    TalkAttachmentsInnerToJSON,
} from './TalkAttachmentsInner';
import type { TalkTalkContentsInner } from './TalkTalkContentsInner';
import {
    TalkTalkContentsInnerFromJSON,
    TalkTalkContentsInnerFromJSONTyped,
    TalkTalkContentsInnerToJSON,
} from './TalkTalkContentsInner';

/**
 * 
 * @export
 * @interface Talk
 */
export interface Talk {
    /**
     * 
     * @type {string}
     * @memberof Talk
     */
    type?: string;
    /**
     * 
     * @type {Array<TalkTalkContentsInner>}
     * @memberof Talk
     */
    talkContents?: Array<TalkTalkContentsInner>;
    /**
     * 
     * @type {Array<TalkAttachmentsInner>}
     * @memberof Talk
     */
    attachments?: Array<TalkAttachmentsInner>;
}

/**
 * Check if a given object implements the Talk interface.
 */
export function instanceOfTalk(value: object): value is Talk {
    return true;
}

export function TalkFromJSON(json: any): Talk {
    return TalkFromJSONTyped(json, false);
}

export function TalkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Talk {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'talkContents': json['talkContents'] == null ? undefined : ((json['talkContents'] as Array<any>).map(TalkTalkContentsInnerFromJSON)),
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(TalkAttachmentsInnerFromJSON)),
    };
}

export function TalkToJSON(value?: Talk | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'talkContents': value['talkContents'] == null ? undefined : ((value['talkContents'] as Array<any>).map(TalkTalkContentsInnerToJSON)),
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(TalkAttachmentsInnerToJSON)),
    };
}

